{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "ScriptLauncher.svelte",
    "Header.svelte",
    "Tile.svelte"
  ],
  "sourcesContent": [
    "<Header style=\"{style}\" \n        pref=\"{pref}\" \n        localIP={localIP} \n        showQR={showQR} \n/>\n<div id=\"ScriptGrid\" style=\"background-color: {style.backgroundColor}; color: {style.textColor};\">\n  {#each lists as list}\n    <div class=\"row\">\n      {#each list as item}\n        <Tile style=\"{style}\" pref=\"{pref}\" item=\"{item}\" on:itemClicked=\"{(e) => { onClickHandler(e.detail); }}\" />\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  :global(body) {\n    padding: 0px;\n    margin: 0px;\n  }\n\n  #ScriptGrid {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 50px;\n    bottom: 0px;\n    margin: 0px;\n    padding: 10px;\n    width: 100%;\n  }\n  \n  .row {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 10px;\n    width: 100%;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import Tile from './components/Tile.svelte';\n  import Header from './components/Header.svelte';\n\n  // \n  // the list is a collection of items to create the tiles for\n  // the user to select from. Each item has the following members:\n  //\n  // name          Name printed on the tile for the script\n  // description   A description of what the script will do.\n  // script        The command line program to launch\n  // args          An array of arguments for the script\n  // color         The color for the tile\n  // textColor     The color of the text in the tile\n  // height        The height of the tile\n  // width         The width of the tile\n  //\n\n  export let lists;\n  export let pref;\n  export let style;\n\n  let localIP;\n  let showQR = true;\n\n  onMount(async () => {\n    //\n    // Check to see if we are using an IP in the address already or not.\n    //\n    var hostname = window.location.hostname;\n    if((hostname[0] >= '0')&&(hostname[0] <= '9')) {\n      localIP = hostname;\n      showQR = false;\n    } else {\n      localIP = await ip_local();\n      showQR = true;\n    }\n  });\n\n  async function ip_local() {\n    if (!RTCPeerConnection) {\n        throw new Error(\"Not supported.\")\n    }\n\n    const peerConnection = new RTCPeerConnection({ iceServers: [] })\n\n    peerConnection.createDataChannel('')\n    peerConnection.createOffer(peerConnection.setLocalDescription.bind(peerConnection), () => { })\n\n    peerConnection.addEventListener(\"icecandidateerror\", (event) => {\n        throw new Error(event.errorText)\n    })\n\n    return new Promise(async resolve => {\n        peerConnection.addEventListener(\"icecandidate\", async ({candidate}) => {\n            peerConnection.close()\n            \n            if (candidate && candidate.candidate) {\n                const result = candidate.candidate.split(\" \")[4]\n                if (result.endsWith(\".local\")) {\n                    const inputDevices = await navigator.mediaDevices.enumerateDevices()\n                    const inputDeviceTypes = inputDevices.map(({ kind }) => kind)\n\n                    const constraints = {}\n\n                    if (inputDeviceTypes.includes(\"audioinput\")) {\n                        constraints.audio = true\n                    } else if (inputDeviceTypes.includes(\"videoinput\")) {\n                        constraints.video = true\n                    } else {\n                        throw new Error(\"An audio or video input device is required!\")\n                    }\n\n                    const mediaStream = await navigator.mediaDevices.getUserMedia(constraints)\n                    mediaStream.getTracks().forEach(track => track.stop())\n                    resolve(ip_local())\n                }\n                resolve(result)\n            }\n        })\n    })\n  }\n\n  function onClickHandler(tile) {\n    //\n    // Tell the server to launch the script. Only the tile.item.script and \n    // tile.item.args need to be used for launching the script.\n    //\n    var lIP = '';\n    if(showQR) {\n      //\n      // We are on the host system. Use localhost only.\n      //\n      lIP = 'localhost';\n    } else {\n      //\n      // We are on another computer. Use the local network IP.\n      //\n      lIP = localIP;\n    }\n    fetch('http://' + lIP + ':3000/api/commandline', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        script: tile.item.script,\n        args: tile.item.args\n      })\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        tile.toggle()\n      })\n      .catch(function (err) {\n        tile.toggle();\n        console.log(err);\n      });\n  }\n</script>\n",
    "<div id=\"header\" style=\"background-color: {style.backgroundColor}; color: {style.textColor};\" >\n  <h2>Script Launcher</h2>\n  {#if showQR}\n    <div id='qrcode' \n         style=\"top: {showBtn ? '-500px' : '100px'};\" \n         bind:this={QRDom}\n         on:click={(e) => { ToggleBtn()}}\n    ></div>\n  {/if}\n  {#if showBtn}\n    <button id='qrbtn' on:click={(e) => {ToggleBtn()}}>\n      Show QR Code\n    </button>\n  {/if}\n</div>\n\n<style>\n  #header {\n    display: flex;\n    flex-direction: row;\n    margin: 0px;\n    padding: 5px;\n    width:  100%;\n    height: 50px;\n    font-size: 16px;\n    font-family: system-ui;\n  }\n\n  #qrcode {\n    position: absolute;\n    z-index: 5;\n    left: 40%;\n  }\n\n  #qrbtn {\n    margin: 5px;\n    border-radius: 10px;\n  }\n\n  h2 {\n    align-self: center;\n    margin: auto;\n  }\n</style>\n\n<script>\n  export let pref;\n  export let style;\n  export let localIP;\n  export let showQR;\n\n  let QRDom;\n  let showBtn = true;\n\n  $: qrpre(localIP);\n\n  function qrpre(tmpIP) {\n    if(QRDom && showQR) {\n      new QRCode(QRDom, \"http://\" + tmpIP + \":3000\");\n      showBtn = true;\n    } else {\n      showBtn = false;\n    }\n  }\n\n  function ToggleBtn() {\n    showBtn = !showBtn;\n  }\n</script>\n\n\n",
    "<div class=\"{active ? 'inactive' : 'active'} scriptItem\" \n     style=\"background-color: {item.color}; color: {item.textColor}; height: {item.height}; width: {item.width};\" \n     on:click=\"{launchScript}\"\n>\n  <p>{item.name}</p>\n</div>\n\n<style>\n  .scriptItem {\n    border-color: gray;\n    border-radius: 10px;\n    border-width: 3px;\n    border-style: solid;\n    margin: 10px;\n    text-align: center;\n    align-content: center;\n  }\n\n  .inactive {\n    box-shadow: inset 5px 5px 5px grey;\n  }\n\n  .active {\n    box-shadow: 5px 5px 5px grey;\n  }\n</style>\n\n\n<script>\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n\n  export let pref;\n  export let item;\n  export let style;\n  let active = false;\n\n  function launchScript(e) {\n    toggleActive();\n    dispatch('itemClicked', {\n      item: item,\n      toggle: toggleActive\n    });\n  }\n\n  function toggleActive() {\n    active = !active;\n  }\n</script>\n\n\n"
  ],
  "names": [],
  "mappings": "AAgBU,IAAI,AAAE,CAAC,AACb,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,AACb,CAAC,AAED,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,AACb,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,AACb,CAAC;ACxBD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,CACZ,KAAK,CAAG,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,SAAS,AACxB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CACV,IAAI,CAAE,GAAG,AACX,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,AACd,CAAC;AClCD,WAAW,cAAC,CAAC,AACX,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,MAAM,AACvB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,AACpC,CAAC,AAED,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,AAC9B,CAAC"
}